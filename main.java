/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uasir;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Farmz
 */
public class main extends javax.swing.JFrame {
  static ArrayList sinopsis = new ArrayList();
  static ArrayList unik = new ArrayList();
  static ArrayList temp = new ArrayList();
  static ArrayList temp2 = new ArrayList();
  static ArrayList temp3 = new ArrayList();
  static double nilaiSimilarity;
  koneksi conn= new koneksi();
  crawler webi = new crawler();
  DefaultTableModel tb;
  
    public main() {
        initComponents();
        isik();
        isiunik();
        tabelmodel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Restart");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try {
          runkan();
          tabelmodel();
      } catch (SQLException ex) {
          Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String sql0 = "delete from komik WHERE judul = judul";
        conn.simpanData(sql0);
        String sql = "delete from kata_unik WHERE kataq = kataq";
        conn.simpanData(sql);
        webi.get();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void tabelmodel(){
       tb =new DefaultTableModel();
       tb.addColumn("Judul");
       tb.addColumn("genre");
       tb.addColumn("sinopis");
       jTable1.setModel(tb);
        try {
           
            ResultSet res = conn.ambilData("select *from ranking order by similariti desc");
             while (res.next()){
                         tb.addRow(new Object[]{res.getString(1),res.getString(2), res.getString(3)}); 
                     }
      
        jTable1.setModel(tb);
          } catch (SQLException ex) {
           JOptionPane.showMessageDialog(this, ex);
        }   
     }
    
public void runkan() throws SQLException{
    String kalimatDicari = jTextField1.getText();
    System.out.println("Kalimat Dicari: " + kalimatDicari);
    double[] vektorDicari = vektorKalimat(kalimatDicari);
//    System.out.println("ini vektor : "+vektorDicari);

    ResultSet res = conn.ambilData("select * from komik");
             while (res.next()){
                        temp.add(res.getString(1));
                        temp2.add(res.getString(2));
                        temp3.add(res.getString(3));
                     }
             
    String sql0 = "delete from ranking WHERE judul = judul";
      conn.simpanData(sql0);

    for (int i=0;i<sinopsis.size();i++) {
      double[] vektor = vektorKalimat((String) sinopsis.get(i));
//      System.out.println("ini vektor : "+vektor[i]);
//      System.out.println("ini vektor : "+vektorDicari[i]);
    nilaiSimilarity = similarity(vektor, vektorDicari);
    
    String sql="insert into ranking "+
                "values"+
                "('"+(String) temp.get(i)+"', "+
                "'"+(String) temp2.get(i)+"', "+
                "'"+(String) temp3.get(i)+"', "+
                "'"+nilaiSimilarity+"'"+
                ")";
      conn.simpanData(sql);
      
      System.out.println("Kalimat: " + (String) sinopsis.get(i));
      System.out.println("Similarity: " + nilaiSimilarity);
    }
    }
    
static double similarity (double[] a, double[] b) {
    double nilaiDotProduct = dotProduct(a, b);
    double panjangA = panjangVektor(a);
    double panjangB = panjangVektor(b);
    return nilaiDotProduct / (panjangA * panjangB);
  }
  static double dotProduct(double[] a, double[] b) {
    double hasil = 0;
    for (int i = 0; i < a.length; i++ ) {
      double an = a[i];
      double bn = b[i];
      hasil = hasil + (an * bn);
    }
    return hasil;
  }
  static double panjangVektor(double[] vektor) {
    double hasil = 0;
    for(double angka: vektor) {
      hasil = hasil + (angka * angka);
    }
    hasil = Math.sqrt(hasil);
    return hasil;
  }
//  static void tampilVektor(double[] vektor) {
//    for (double angka: vektor) {
//      System.out.print(angka + ", ");
//    }
//    System.out.println();
//  }
  
  static double[] vektorKalimat(String kalimat) {
    double[] hasil = new double[unik.size()];
    for (int i = 0; i < hasil.length; i++) {
      String kataDicari = (String) unik.get(i);
      int nilaiTf = tf(kalimat, kataDicari);
      double nilaiIdf = idf(kataDicari);
      double bobot = nilaiTf * nilaiIdf;
      hasil[i] = bobot;
    }
    return hasil;
  }
  static int tf(String kalimat, String kataDicari) {
    String[] kataKata = splitKalimat(kalimat);
    int jumlah = 0;
    for (String kata : kataKata) {
      if (kata.equals(kataDicari)) {
        jumlah = jumlah + 1;
      }
    }
    return jumlah;
  }
  static double idf(String kataDicari) {
    double n = sinopsis.size();
    double nilaiDf = df(kataDicari);
    return Math.log10(n / nilaiDf);
  }
  static int df(String kataDicari) {
    int jumlah = 0;
    for (int i=0;i<sinopsis.size();i++) {
      String[] kataKata = splitKalimat((String) sinopsis.get(i));
      for (String kata : kataKata) {
        if (kata.equals(kataDicari)) {
          jumlah = jumlah + 1;
          break;
        }
      }
    }
    return jumlah;
  }
  static String[] splitKalimat(String kalimat) {
    return kalimat.split(" ");
  }
  
  public void isik(){
    int i=0;
    try {
             ResultSet res = conn.ambilData("select sinopsis from komik");
             while (res.next()){
                            sinopsis.add(res.getString(1));
                        i++;
                     }
                 
        } catch (SQLException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
  
  public void isiunik(){
        int i=0;

    try {
             ResultSet res = conn.ambilData("select * from kata_unik");
             while (res.next()){
                          unik.add(res.getString(1)) ;
                        i++;
                     }
        } catch (SQLException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
  
}
